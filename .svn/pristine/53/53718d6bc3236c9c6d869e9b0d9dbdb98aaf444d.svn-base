###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Feb/2014  18:15:58 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\proj\TC007_OBD_STM32_MB\bootloader\bootloader_src\lib #
#                    rary\src\stm32f10x_lib.c                                 #
#    Command line =  D:\proj\TC007_OBD_STM32_MB\bootloader\bootloader_src\lib #
#                    rary\src\stm32f10x_lib.c -D VECT_TAB_FLASH -D            #
#                    IAR_ARM_CM3 -lcN D:\proj\TC007_OBD_STM32_MB\bootloader\I #
#                    AR_STM32_BOOT\Debug\List\ -o                             #
#                    D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_STM32_BOOT\Deb #
#                    ug\Obj\ --no_cse --no_unroll --no_inline                 #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0_3\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_STM3 #
#                    2_BOOT\.\ -I D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_S #
#                    TM32_BOOT\..\bootloader_src\ -I                          #
#                    D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_STM32_BOOT\..\ #
#                    bootloader_src\library\inc\ -Ol --use_c++_inline         #
#                    --require_prototypes                                     #
#    List file    =  D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_STM32_BOOT\Deb #
#                    ug\List\stm32f10x_lib.lst                                #
#    Object file  =  D:\proj\TC007_OBD_STM32_MB\bootloader\IAR_STM32_BOOT\Deb #
#                    ug\Obj\stm32f10x_lib.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\proj\TC007_OBD_STM32_MB\bootloader\bootloader_src\library\src\stm32f10x_lib.c
      1          /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
      2          * File Name          : stm32f10x_lib.c
      3          * Author             : MCD Application Team
      4          * Version            : V1.0
      5          * Date               : 10/08/2007
      6          * Description        : This file provides all peripherals pointers initialization.
      7          ********************************************************************************
      8          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          #define EXT
     17          
     18          /* Includes ------------------------------------------------------------------*/
     19          #include "stm32f10x_lib.h"
     20          
     21          /* Private typedef -----------------------------------------------------------*/
     22          /* Private define ------------------------------------------------------------*/
     23          /* Private macro -------------------------------------------------------------*/
     24          /* Private variables ---------------------------------------------------------*/
     25          /* Private function prototypes -----------------------------------------------*/
     26          /* Private functions ---------------------------------------------------------*/
     27          
     28          #ifdef DEBUG
     29          /*******************************************************************************
     30          * Function Name  : debug
     31          * Description    : This function initialize peripherals pointers.
     32          * Input          : None
     33          * Output         : None
     34          * Return         : None
     35          *******************************************************************************/
     36          void debug(void)
     37          {
     38          
     39          /************************************* ADC ************************************/
     40          #ifdef _ADC1
     41            ADC1 = (ADC_TypeDef *)  ADC1_BASE;
     42          #endif /*_ADC1 */
     43          
     44          #ifdef _ADC2
     45            ADC2 = (ADC_TypeDef *)  ADC2_BASE;
     46          #endif /*_ADC2 */
     47          
     48          /************************************* BKP ************************************/
     49          #ifdef _BKP
     50            BKP = (BKP_TypeDef *)  BKP_BASE;
     51          #endif /*_BKP */
     52          
     53          /************************************* CAN ************************************/
     54          #ifdef _CAN
     55            CAN = (CAN_TypeDef *)  CAN_BASE;
     56          #endif /*_CAN */
     57          
     58          /************************************* DMA ************************************/
     59          #ifdef _DMA
     60            DMA = (DMA_TypeDef *)  DMA_BASE;
     61          #endif /*_DMA */
     62          
     63          #ifdef _DMA_Channel1
     64            DMA_Channel1 = (DMA_Channel_TypeDef *)  DMA_Channel1_BASE;
     65          #endif /*_DMA_Channel1 */
     66          
     67          #ifdef _DMA_Channel2
     68            DMA_Channel2 = (DMA_Channel_TypeDef *)  DMA_Channel2_BASE;
     69          #endif /*_DMA_Channel2 */
     70          
     71          #ifdef _DMA_Channel3
     72            DMA_Channel3 = (DMA_Channel_TypeDef *)  DMA_Channel3_BASE;
     73          #endif /*_DMA_Channel3 */
     74          
     75          #ifdef _DMA_Channel4
     76            DMA_Channel4 = (DMA_Channel_TypeDef *)  DMA_Channel4_BASE;
     77          #endif /*_DMA_Channel4 */
     78          
     79          #ifdef _DMA_Channel5
     80            DMA_Channel5 = (DMA_Channel_TypeDef *)  DMA_Channel5_BASE;
     81          #endif /*_DMA_Channel5 */
     82          
     83          #ifdef _DMA_Channel6
     84            DMA_Channel6 = (DMA_Channel_TypeDef *)  DMA_Channel6_BASE;
     85          #endif /*_DMA_Channel6 */
     86          
     87          #ifdef _DMA_Channel7
     88            DMA_Channel7 = (DMA_Channel_TypeDef *)  DMA_Channel7_BASE;
     89          #endif /*_DMA_Channel7 */
     90          
     91          /************************************* EXTI ***********************************/
     92          #ifdef _EXTI
     93            EXTI = (EXTI_TypeDef *)  EXTI_BASE;
     94          #endif /*_EXTI */
     95          
     96          /************************************* FLASH and Option Bytes *****************/
     97          #ifdef _FLASH
     98            FLASH = (FLASH_TypeDef *)  FLASH_BASE;
     99            OB = (OB_TypeDef *)  OB_BASE;
    100          #endif /*_FLASH */
    101          
    102          /************************************* GPIO ***********************************/
    103          #ifdef _GPIOA
    104            GPIOA = (GPIO_TypeDef *)  GPIOA_BASE;
    105          #endif /*_GPIOA */
    106          
    107          #ifdef _GPIOB
    108            GPIOB = (GPIO_TypeDef *)  GPIOB_BASE;
    109          #endif /*_GPIOB */
    110          
    111          #ifdef _GPIOC
    112            GPIOC = (GPIO_TypeDef *)  GPIOC_BASE;
    113          #endif /*_GPIOC */
    114          
    115          #ifdef _GPIOD
    116            GPIOD = (GPIO_TypeDef *)  GPIOD_BASE;
    117          #endif /*_GPIOD */
    118          
    119          #ifdef _GPIOE
    120            GPIOE = (GPIO_TypeDef *)  GPIOE_BASE;
    121          #endif /*_GPIOE */
    122          
    123          #ifdef _AFIO
    124            AFIO = (AFIO_TypeDef *)  AFIO_BASE;
    125          #endif /*_AFIO */
    126          
    127          /************************************* I2C ************************************/
    128          #ifdef _I2C1
    129            I2C1 = (I2C_TypeDef *)  I2C1_BASE;
    130          #endif /*_I2C1 */
    131          
    132          #ifdef _I2C2
    133            I2C2 = (I2C_TypeDef *)  I2C2_BASE;
    134          #endif /*_I2C2 */
    135          
    136          /************************************* IWDG ***********************************/
    137          #ifdef _IWDG
    138            IWDG = (IWDG_TypeDef *) IWDG_BASE;
    139          #endif /*_IWDG */
    140          
    141          /************************************* NVIC ***********************************/
    142          #ifdef _NVIC
    143            NVIC = (NVIC_TypeDef *)  NVIC_BASE;
    144            SCB = (SCB_TypeDef *)  SCB_BASE;
    145          #endif /*_NVIC */
    146          
    147          /************************************* PWR ************************************/
    148          #ifdef _PWR
    149            PWR = (PWR_TypeDef *)  PWR_BASE;
    150          #endif /*_PWR */
    151          
    152          /************************************* RCC ************************************/
    153          #ifdef _RCC
    154            RCC = (RCC_TypeDef *)  RCC_BASE;
    155          #endif /*_RCC */
    156          
    157          /************************************* RTC ************************************/
    158          #ifdef _RTC
    159            RTC = (RTC_TypeDef *)  RTC_BASE;
    160          #endif /*_RTC */
    161          
    162          /************************************* SPI ************************************/
    163          #ifdef _SPI1
    164            SPI1 = (SPI_TypeDef *)  SPI1_BASE;
    165          #endif /*_SPI1 */
    166          
    167          #ifdef _SPI2
    168            SPI2 = (SPI_TypeDef *)  SPI2_BASE;
    169          #endif /*_SPI2 */
    170          
    171          /************************************* SysTick ********************************/
    172          #ifdef _SysTick
    173            SysTick = (SysTick_TypeDef *)  SysTick_BASE;
    174          #endif /*_SysTick */
    175          
    176          /************************************* TIM1 ***********************************/
    177          #ifdef _TIM1
    178            TIM1 = (TIM1_TypeDef *)  TIM1_BASE;
    179          #endif /*_TIM1 */
    180          
    181          /************************************* TIM ************************************/
    182          #ifdef _TIM2
    183            TIM2 = (TIM_TypeDef *)  TIM2_BASE;
    184          #endif /*_TIM2 */
    185          
    186          #ifdef _TIM3
    187            TIM3 = (TIM_TypeDef *)  TIM3_BASE;
    188          #endif /*_TIM3 */
    189          
    190          #ifdef _TIM4
    191            TIM4 = (TIM_TypeDef *)  TIM4_BASE;
    192          #endif /*_TIM4 */
    193          
    194          /************************************* USART **********************************/
    195          #ifdef _USART1
    196            USART1 = (USART_TypeDef *) USART1_BASE;
    197          #endif /*_USART1 */
    198          
    199          #ifdef _USART2
    200            USART2 = (USART_TypeDef *) USART2_BASE;
    201          #endif /*_USART2 */
    202          
    203          #ifdef _USART3
    204            USART3 = (USART_TypeDef *) USART3_BASE;
    205          #endif /*_USART3 */
    206          
    207          /************************************* WWDG ***********************************/
    208          #ifdef _WWDG
    209            WWDG = (WWDG_TypeDef *)  WWDG_BASE;
    210          #endif /*_WWDG */
    211          }
    212          #endif  /* DEBUG*/
    213          
    214          /******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE****/


 

 


Errors: none
Warnings: none
